/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 36 37 38>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40>;
            hold-trigger-on-release;
        };

        sticky_quick: sticky_quick {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_QUICK";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <1000>;
            quick-release;
            ignore-modifiers;
        };

        q_esc: q_esc {
            compatible = "zmk,behavior-tap-dance";
            label = "Q_ESC";
            #binding-cells = <0>;
            bindings = <&kp Q>, <&kp ESC>;
        };

        sticky_shift_layer: sticky_shift_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "STICKY_SHIFT_LAYER";
            bindings = <&mo>, <&sticky_quick>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT {
            bindings = <
&none  &q_esc           &kp W            &kp F         &kp P              &kp B                                    &kp J  &kp L               &kp U         &kp Y             &kp BACKSPACE     &none
&none  &hml LEFT_GUI A  &hml LEFT_ALT R  &hml LCTRL S  &hml LEFT_SHIFT T  &kp G                                    &kp M  &hmr RIGHT_SHIFT N  &hmr RCTRL E  &hmr RIGHT_ALT I  &hmr RIGHT_GUI O  &none
&none  &kp Z            &kp X            &kp C         &kp D              &kp V                                    &kp K  &kp H               &kp COMMA     &kp DOT           &kp FSLH          &none
                                         &none         &lt 1 TAB                 &sticky_shift_layer 3 LEFT_SHIFT         &lt 2 SPACE         &kp ENTER
            >;
        };

        NAVIGATION {
            // ------------------------------------------------------------------------------------
            // |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      DEL    |
            // |    |  _  |  +  |  {  |  }  | "|" |   | LFT | DWN |  UP | RGT |  `  |       \     |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | HOME| END | PGUP| PGDN| PRSC| SHFT(SPACE) |
            //                       |     |     | RET |     |     |

            bindings = <
&none  &none         &none          &none             &kp PRINTSCREEN  &kp F12         &none     &kp PG_UP  &kp UP_ARROW  &none      &none    &none
&none  &kp LEFT_GUI  &kp RIGHT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT   &none           &kp HOME  &kp LEFT   &kp DOWN      &kp RIGHT  &kp END  &none
&none  &trans        &trans         &trans            &trans           &trans          &none     &kp PG_DN  &none         &none      &none    &none
                                    &none             &none                     &none            &none      &none
            >;
        };

        SYMBOLS {
            // ----------------------------------------------------------------------------
            // |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
            // |    |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | F7  | F8  | F9  | F10 | F11 | F12 |
            //                       |     | ADJ | BKSP |    |     |

            bindings = <
&trans  &kp EXCL  &kp AT     &kp HASH           &kp DOLLAR        &kp PERCENT                      &kp CARET              &kp AMPS           &kp BACKSLASH    &kp PIPE          &kp BACKSPACE  &none
&trans  &kp SEMI  &none      &kp LEFT_BRACE     &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS             &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp EQUAL         &kp GRAVE      &none
&trans  &none     &kp TILDE  &kp DOUBLE_QUOTES  &kp COLON         &kp MINUS                        &kp PLUS               &kp ASTERISK       &kp LESS_THAN    &kp GREATER_THAN  &kp SLASH      &none
                             &trans             &trans                                  &kp UNDER                         &trans             &trans
            >;
        };

        NUMBERS {
            // -----------------------------------------------------------------------------------------
            // | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
            // | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
            // |          |          |          |          |    |         |   | RESET |     |     |     |     |        |
            //                                              |     |     |     |     |     |

            bindings = <
&none  &none      &none      &kp LC(F)  &kp LC(P)  &none              &none    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp LC(BACKSPACE)  &trans
&none  &kp LC(A)  &kp LC(R)  &kp LC(S)  &kp LC(T)  &none              &none    &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp EQUAL          &trans
&none  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(D)  &kp LC(V)          &kp DOT  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp LC(PERIOD)     &none
                             &trans     &trans                &trans           &mo 4         &kp NUMBER_0
            >;
        };

        layer_4 {
            bindings = <
&none  &none  &none  &none  &none  &bt BT_NXT             &none             &none       &none              &none            &none       &none
&none  &none  &none  &none  &none  &bt BT_CLR_ALL         &kp C_PLAY_PAUSE  &kp C_PREV  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT  &none
&none  &none  &none  &none  &none  &sys_reset             &none             &none       &none              &none            &none       &none
                     &none  &none                  &none                    &none       &none
            >;
        };
    };
};
